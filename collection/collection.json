{
  "info": {
    "_postman_id": "api-gateway-collection-2025",
    "name": "API Gateway - Monitoring Services",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{accessToken}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register",
          "auth": {
            "type": "noauth"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const json = pm.response.json();",
                  "if (json && json.accessToken) pm.collectionVariables.set('accessToken', json.accessToken);",
                  "if (json && json.refreshToken) pm.collectionVariables.set('refreshToken', json.refreshToken);",
                  "pm.test('has tokens', function () {",
                  "  pm.expect(json).to.have.property('accessToken');",
                  "  pm.expect(json).to.have.property('refreshToken');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"secret123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "register"
              ]
            }
          }
        },
        {
          "name": "Login",
          "auth": {
            "type": "noauth"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const json = pm.response.json();",
                  "if (json && json.accessToken) pm.collectionVariables.set('accessToken', json.accessToken);",
                  "if (json && json.refreshToken) pm.collectionVariables.set('refreshToken', json.refreshToken);",
                  "pm.test('has tokens', function () {",
                  "  pm.expect(json).to.have.property('accessToken');",
                  "  pm.expect(json).to.have.property('refreshToken');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"secret123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "login"
              ]
            }
          }
        },
        {
          "name": "Refresh",
          "auth": {
            "type": "noauth"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const json = pm.response.json();",
                  "if (json && json.accessToken) pm.collectionVariables.set('accessToken', json.accessToken);",
                  "if (json && json.refreshToken) pm.collectionVariables.set('refreshToken', json.refreshToken);",
                  "pm.test('has tokens', function () {",
                  "  pm.expect(json).to.have.property('accessToken');",
                  "  pm.expect(json).to.have.property('refreshToken');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "refresh"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Catalog",
      "item": [
        {
          "name": "Create Catalog",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Produto Teste\",\n  \"price\": 100\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/catalog",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "catalog"
              ]
            }
          }
        },
        {
          "name": "List Catalog",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/catalog",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "catalog"
              ]
            }
          }
        },
        {
          "name": "Get Catalog by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/catalog/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "catalog",
                ":id"
              ]
            }
          }
        },
        {
          "name": "Update Catalog",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Produto Atualizado\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/catalog/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "catalog",
                ":id"
              ]
            }
          }
        },
        {
          "name": "Delete Catalog",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/catalog/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "catalog",
                ":id"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Notification",
      "item": [
        {
          "name": "Create Notification",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"custom\",\n  \"message\": \"Nova notificação\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notification",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "notification"
              ]
            }
          }
        },
        {
          "name": "List Notifications",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/notification",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "notification"
              ]
            }
          }
        },
        {
          "name": "Get Notification by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/notification/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "notification",
                ":id"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Order",
      "item": [
        {
          "name": "Create Order",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productIds\": [1, 2]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/order",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "order"
              ]
            }
          }
        },
        {
          "name": "List Orders",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/order",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "order"
              ]
            }
          }
        },
        {
          "name": "Get Order by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/order/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "order",
                ":id"
              ]
            }
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000"
    },
    {
      "key": "accessToken",
      "value": ""
    },
    {
      "key": "refreshToken",
      "value": ""
    }
  ]
}