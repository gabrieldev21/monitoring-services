services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - '9090:9090'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - mynet
    restart: unless-stopped

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - '8081:16686' # Jaeger UI
      - '14268'
      - '14250'
    networks:
      - mynet
    restart: unless-stopped

  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: otel-collector
    command: ['--config=/etc/otel-collector-config.yml']
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - '1888:1888' # pprof extension
      - '13133:13133' # health_check extension
      - '4317:4317' # OTLP gRPC receiver
      - '4318:4318' # http gRPC receiver
      - '55679:55679' # zpages extension
    depends_on:
      - jaeger
    links:
      - jaeger
    networks:
      - mynet
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - '3032:3000'
    restart: unless-stopped
    depends_on:
      - prometheus
    networks:
      - mynet

  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: api-gateway
    image: api-gateway:latest
    container_name: api-gateway
    ports:
      - '3000:3000'
    depends_on:
      - prometheus
      - ms-auth
      - otel-collector
    environment:
      - NODE_ENV=production
      - PROMETHEUS_URL=http://prometheus:9090
      - MS_AUTH_URL=http://ms-auth:3001
      - SERVICE_NAME=api-gateway
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otel-collector:4318/v1/traces
    networks:
      - mynet
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:3000/health',
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  ms-auth:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: ms-auth
    image: ms-auth:latest
    container_name: ms-auth
    ports:
      - '3001:3001'
    depends_on:
      - prometheus
      - otel-collector
    environment:
      - NODE_ENV=production
      - PROMETHEUS_URL=http://prometheus:9090
      - SERVICE_NAME=ms-auth
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otel-collector:4318/v1/traces
    networks:
      - mynet
    restart: unless-stopped

  ms-catalog:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: ms-catalog
    image: ms-catalog:latest
    container_name: ms-catalog
    ports:
      - '3002:3002'
    depends_on:
      - prometheus
      - otel-collector
    environment:
      - NODE_ENV=production
      - PROMETHEUS_URL=http://prometheus:9090
      - SERVICE_NAME=ms-catalog
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otel-collector:4318/v1/traces
    networks:
      - mynet
    restart: unless-stopped

  ms-notification:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: ms-notification
    image: ms-notification:latest
    container_name: ms-notification
    ports:
      - '3003:3003'
    depends_on:
      - prometheus
      - otel-collector
    environment:
      - NODE_ENV=production
      - PROMETHEUS_URL=http://prometheus:9090
      - SERVICE_NAME=ms-notification
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otel-collector:4318/v1/traces
    networks:
      - mynet
    restart: unless-stopped

  ms-order:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: ms-order
    image: ms-order:latest
    container_name: ms-order
    ports:
      - '3004:3004'
    depends_on:
      - prometheus
      - otel-collector
    environment:
      - NODE_ENV=production
      - PROMETHEUS_URL=http://prometheus:9090
      - SERVICE_NAME=ms-order
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otel-collector:4318/v1/traces
    networks:
      - mynet
    restart: unless-stopped

networks:
  mynet:
    driver: bridge

volumes:
  grafana_data:
  prometheus_data:
