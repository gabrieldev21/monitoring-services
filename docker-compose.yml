services:
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: api-gateway
    image: api-gateway:latest
    container_name: api-gateway
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - PROMETHEUS_URL=http://prometheus:9090
      - MS_AUTH_URL=http://ms-auth:3001
      - SERVICE_NAME=api-gateway

      - OTEL_LOGS_EXPORTER=none
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://opentelemetry-collector:4317
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://0.0.0.0:3000/health',
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  ms-auth:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: ms-auth
    image: ms-auth:latest
    container_name: ms-auth
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=production
      - PROMETHEUS_URL=http://prometheus:9090
      - SERVICE_NAME=ms-auth

      - OTEL_LOGS_EXPORTER=none
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://opentelemetry-collector:4317
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
    restart: unless-stopped

  ms-catalog:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: ms-catalog
    image: ms-catalog:latest
    container_name: ms-catalog
    ports:
      - '3002:3002'
    environment:
      - NODE_ENV=production
      - PROMETHEUS_URL=http://prometheus:9090
      - SERVICE_NAME=ms-catalog

      - OTEL_LOGS_EXPORTER=none
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://opentelemetry-collector:4317
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
    restart: unless-stopped

  ms-notification:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: ms-notification
    image: ms-notification:latest
    container_name: ms-notification
    ports:
      - '3003:3003'
    environment:
      - NODE_ENV=production
      - PROMETHEUS_URL=http://prometheus:9090
      - SERVICE_NAME=ms-notification

      - OTEL_LOGS_EXPORTER=none
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://opentelemetry-collector:4317
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
    restart: unless-stopped

  ms-order:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: ms-order
    image: ms-order:latest
    container_name: ms-order
    ports:
      - '3004:3004'
    environment:
      - NODE_ENV=production
      - PROMETHEUS_URL=http://prometheus:9090
      - SERVICE_NAME=ms-order

      - OTEL_LOGS_EXPORTER=none
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://opentelemetry-collector:4317
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
    restart: unless-stopped

networks:
  default:
    name: mynet
